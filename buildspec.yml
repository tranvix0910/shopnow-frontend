version: 0.2

env:
  secrets-manager:
    GITHUB_TOKEN: "workshop-2-shopnow-github-access-token:GITHUB_TOKEN"
    SONAR_TOKEN: "workshop-2-shopnow-sonarqube-access-token:SONARQUBE_TOKEN"

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - echo "Install phase started..."
      - npm install
      - apt-get update && apt-get install -y git curl unzip openjdk-17-jdk
      - echo "Installing sonar-scanner..."
      - wget --tries=3 https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.1.0.4889-linux-x64.zip
      - unzip sonar-scanner-cli-7.1.0.4889-linux-x64.zip
      - mv sonar-scanner-7.1.0.4889-linux-x64 /opt/sonar-scanner
      - export PATH=$PATH:/opt/sonar-scanner/bin
      - echo "Install phase completed"

  pre_build:
    commands:
      - echo "Pre-build phase started..."

      # Get Git Tag as version
      - >
        TAG_VERSION=$(git describe --tags --exact-match 2>/dev/null || git describe --tags --abbrev=0 2>/dev/null || git rev-parse --short HEAD);
        echo "Using Git tag as version: $TAG_VERSION"
        export TAG_NAME=$TAG_VERSION

      # Verify project structure
      - test -f "package.json" || { echo "Missing package.json"; exit 1; }
      - test -f "Dockerfile" || { echo "Missing Dockerfile"; exit 1; }

      # Run SonarQube analysis
      - echo "Running SonarQube analysis..."
      - sonar-scanner \
          -Dsonar.projectKey=shopnow-frontend \
          -Dsonar.projectName=shopnow-frontend \
          -Dsonar.projectVersion="$TAG_NAME" \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN || echo "SonarQube analysis failed but continuing..."

      # Login to ECR
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_LOGIN_URI

  build:
    commands:
      - echo "Build phase started..."
      - docker build -t $ECR_REPOSITORY_URI:$TAG_NAME .
      - docker run --rm -d --name test-frontend -p 80:80 $ECR_REPOSITORY_URI:$TAG_NAME
      - sleep 5 && curl -f http://localhost:80 || echo "Test request failed"
      - docker stop test-frontend || true
      - docker rm test-frontend || true

  post_build:
    commands:
      - echo "Post-build phase started..."
      - docker push $ECR_REPOSITORY_URI:$TAG_NAME

      # Update config repo
      - mkdir -p config-repo && cd config-repo
      - git clone $CONFIG_REPO_URL . && git config user.email "tranvix.work@gmail.com"
      - git config user.name "Tran Dai Vi - N22DCCI044"
      - sed -i "s/^  tag.*/  tag: \"$TAG_NAME\"/" helm-values/values-prod.yaml
      - git add helm-values/values-prod.yaml
      - git commit -m "Update frontend image version to $TAG_NAME"
      - git remote set-url origin https://$GITHUB_TOKEN@github.com/tranvix0910/shopnow-frontend-config.git
      - git push origin main
      - cd ..

      - echo "âœ… Build & Deploy completed for tag $TAG_NAME"
